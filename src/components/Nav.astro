---
import type { Label } from "recharts";
import type { iconPaths } from "./IconPaths.ts";
import Icon from "./Icon.astro";

// Nav Items
const textLinks: { label: string; href: string }[] = [
    { label: "Home", href: "/" },
    { label: "Work", href: "/work/" },
    { label: "About", href: "/about/" },
    { label: "Contact", href: "/contact/" },
    // { label: 'Resume', href: '/resume/'},
];

const iconLinks: {
    label: string;
    href: string;
    icon: keyof typeof iconPaths;
}[] = [
    {
        label: "LinkedIn",
        href: "https://www.linkedin.com/in/ctae/",
        icon: "linkedin-logo",
    },
    {
        label: "GitHub",
        href: "https://github.com/tortaepaisitphongse",
        icon: "github-logo",
    },
];

// Test if link points to current page
const isCurrentPage = (href: string) => {
    let pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
    if (pathname.at(0) !== "/") pathname = "/" + pathname;
    if (pathname.at(-1) !== "/") pathname += "/";
    return pathname === href || (href !== "/" && pathname.startsWith(href));
};
---

<div class="wrapper">
    <nav class="navigation">
        <div class="nav-container">
            <a href="/" class="site-title">Tor Taepaisitphongse</a>

            <!-- Mobile menu button -->
            <button
                class="mobile-menu-btn"
                aria-label="Toggle menu"
                aria-expanded="false"
            >
                <span class="hamburger"></span>
                <span class="hamburger"></span>
                <span class="hamburger"></span>
            </button>

            <!-- Navigation menu -->
            <ul class="nav-menu" id="nav-menu">
                {
                    textLinks.map(({ label, href }) => (
                        <li class="nav-item">
                            <a
                                href={href}
                                class={`nav-link ${isCurrentPage(href) ? "active" : ""}`}
                            >
                                {label}
                            </a>
                        </li>
                    ))
                }
                <li class="nav-item social-container">
                    <div class="social-links">
                        {
                            iconLinks.map(({ label, href, icon }) => (
                                <a
                                    href={href}
                                    class="nav-link social-link"
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    aria-label={label}
                                    title={label}
                                >
                                    <Icon icon={icon} />
                                </a>
                            ))
                        }
                    </div>
                </li>
            </ul>
        </div>
    </nav>
</div>

<script>
    // Mobile menu toggle functionality
    const mobileMenuBtn = document.querySelector(".mobile-menu-btn");
    const navMenu = document.querySelector(".nav-menu");

    if (mobileMenuBtn && navMenu) {
        mobileMenuBtn.addEventListener("click", () => {
            const isExpanded =
                mobileMenuBtn.getAttribute("aria-expanded") === "true";

            // Toggle menu
            mobileMenuBtn.setAttribute("aria-expanded", !isExpanded);
            navMenu.classList.toggle("active");
            mobileMenuBtn.classList.toggle("active");
        });

        // Close menu when clicking nav links (mobile)
        navMenu.addEventListener("click", (e) => {
            if (e.target.classList.contains("nav-link")) {
                navMenu.classList.remove("active");
                mobileMenuBtn.classList.remove("active");
                mobileMenuBtn.setAttribute("aria-expanded", "false");
            }
        });
    }
</script>

<style>
    .navigation {
        background: #fff;
        border-bottom: 1px solid #e5e5e5;
        position: sticky;
        top: 0;
        z-index: 1000;
    }

    .nav-container {
        padding: 0 1rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 60px;
    }

    .site-title {
        font-family: var(--font-brand);
        font-size: 1.5rem;
        font-weight: bold;
        text-decoration: none;
        color: var(--black);
    }

    .site-title:hover {
        color: var(--link-color);
    }

    /* Mobile menu button */
    .mobile-menu-btn {
        display: flex;
        flex-direction: column;
        background: none;
        border: none;
        cursor: pointer;
        padding: 0.5rem;
        gap: 0.25rem;
    }

    .hamburger {
        width: 25px;
        height: 3px;
        background: var(--black);
        transition: all 0.3s ease;
    }

    /* Hamburger animation */
    .mobile-menu-btn.active .hamburger:nth-child(1) {
        transform: rotate(45deg) translate(6px, 6px);
    }

    .mobile-menu-btn.active .hamburger:nth-child(2) {
        opacity: 0;
    }

    .mobile-menu-btn.active .hamburger:nth-child(3) {
        transform: rotate(-45deg) translate(6px, -6px);
    }

    /* Navigation menu */
    .nav-menu {
        display: flex;
        list-style: none;
        margin: 0;
        padding: 0;
        gap: 2rem;
    }

    .nav-item {
        margin: 0;
    }

    .nav-link {
        font-family: var(--font-brand);
        text-decoration: none;
        color: var(--black);
        font-weight: 500;
        padding: 0.5rem 0;
        transition: color 0.2s ease;
        position: relative;
    }

    .nav-link:hover {
        color: var(--link-color);
    }

    .nav-link.active {
        color: var(--link-color);
    }

    .nav-link.active::after {
        content: "";
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 100%;
        height: 2px;
        background: var(--link-color);
    }

    /* Mobile styles */
    @media (max-width: 768px) {
        .nav-menu {
            position: fixed;
            top: 60px;
            left: 0;
            width: 100%;
            background: var(--white);
            flex-direction: column;
            padding: 1rem 1.5rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            transform: translateX(-100%);
            transition: transform 0.3s ease;
            gap: 0;
            visibility: hidden;
        }

        .nav-menu.active {
            transform: translateX(0);
            visibility: visible;
        }

        .nav-item {
            padding: 0 1rem;
        }

        .nav-link {
            display: block;
            padding: 1rem 0;
            border-bottom: 1px solid #f0f0f0;
        }

        .nav-link.active::after {
            display: none;
        }

        .social-container {
            display: flex;
            align-items: center;
        }

        .social-links {
            display: flex;
            gap: 1rem;
            align-items: center;
        }
    }

    /* Desktop styles */
    @media (min-width: 769px) {
        .mobile-menu-btn {
            display: none;
        }

        .nav-menu {
            position: static;
            transform: none;
            background: none;
            box-shadow: none;
            padding: 0;
        }

        .social-link {
            padding: 0 1rem;
        }
    }
</style>
